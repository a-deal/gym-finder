name: Claude Code Review (On-Demand)

on:
  # Trigger manually or via comment
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to review (leave empty for current branch)'
        required: false
        type: string
  issue_comment:
    types: [created]

jobs:
  claude-review:
    # Only run if manually triggered OR if comment contains "@claude" or "claude review"
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       (contains(github.event.comment.body, '@claude') ||
        contains(github.event.comment.body, 'claude review')))

    runs-on: ubuntu-latest
    # Make this job optional - don't block PR merges if Claude review fails
    continue-on-error: true
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Get PR details
        id: pr-details
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.pr_number }}" ]; then
              echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
            else
              echo "pr_number=" >> $GITHUB_OUTPUT
            fi
          elif [ "${{ github.event_name }}" == "issue_comment" ]; then
            echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          # For PR comments, checkout the PR branch
          ref: ${{ github.event_name == 'issue_comment' && format('refs/pull/{0}/head', github.event.issue.number) || github.ref }}

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        # Allow this step to fail without failing the entire job
        continue-on-error: true
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback.

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

      - name: Claude Review Status
        if: always()
        run: |
          echo "ü§ñ Claude Review (On-Demand) Results:"
          echo "Triggered by: ${{ github.event_name }}"

          if [ "${{ steps.claude-review.outcome }}" == "success" ]; then
            echo "‚úÖ Claude review completed successfully"
            echo "üí° Review feedback has been posted to the PR"
          elif [ "${{ steps.claude-review.outcome }}" == "failure" ]; then
            echo "‚ö†Ô∏è  Claude review failed (likely due to credit balance or API issues)"
            echo "üí∞ Check Anthropic account credits or API key configuration"
            echo "üîß This is non-blocking - PR can still be merged"
          else
            echo "‚ÑπÔ∏è  Claude review was skipped or cancelled"
          fi

          echo ""
          echo "üìù How to trigger Claude review:"
          echo "  ‚Ä¢ Comment '@claude' or 'claude review' on any PR"
          echo "  ‚Ä¢ Use 'Actions' tab ‚Üí 'Claude Code Review (On-Demand)' ‚Üí 'Run workflow'"
